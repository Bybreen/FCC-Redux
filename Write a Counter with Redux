// In this lesson, you'll implement a simple counter with Redux from scratch. 
// The basics are provided in the code editor, but you'll have to fill in the details! 
// Use the names that are provided and define incAction and decAction action creators, 
// the counterReducer(), INCREMENT and DECREMENT action types, and finally the Redux store. 
// Once you're finished you should be able to dispatch INCREMENT or DECREMENT actions to increment 
// or decrement the state held in the store. 
// Good luck building your first Redux app!

const INCREMENT = 'INCREMENT'; 

// define a constant for increment action types
const DECREMENT = 'DECREMENT';

 // define a constant for decrement action types

const counterReducer = (state = 0, action) => {
    switch (action.type){
    case INCREMENT:
    return state = state + 1 
case DECREMENT:
return state = state - 1
default:
return state
}} ; // define the counter reducer which will increment or decrement the state based on the action it receives

const incAction = () => { return {type: INCREMENT} }; // define an action creator for incrementing

const decAction = () => { return { type: DECREMENT}}; // define an action creator for decrementing

const store = Redux.createStore (counterReducer); // define the Redux store here, passing in your reducers
